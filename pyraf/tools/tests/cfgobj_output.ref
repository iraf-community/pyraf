THE CONFIG-OBJ:
{'STEP 1: STATIC MASK': {'static': True, 'static_sig': 4.0},
'STEP 2: SKY SUBTRACTION': {'skyclip': 5, 'skylower': None, 'skylsigma': 4.0, 'skystat': 'median', 'skysub': False, 'skyupper': None, 'skyuser': '', 'skyusigma': 4.0, 'skywidth': None},
'STEP 3: DRIZZLE SEPARATE IMAGES': {'_section_': '', 'driz_sep_bits': 0, 'driz_sep_fillval': '', 'driz_sep_kernel': 'turbo', 'driz_sep_outnx': None, 'driz_sep_outny': None, 'driz_sep_pixfrac': 1.0, 'driz_sep_rot': None, 'driz_sep_scale': None, 'driz_sep_wt_scl': 'exptime', 'driz_separate': False},
'STEP 4: CREATE MEDIAN IMAGE': {'combine_grow': 1, 'combine_hthresh': 'INDEF', 'combine_lthresh': 'INDEF', 'combine_maskpt': 0.5, 'combine_nhigh': 0, 'combine_nlow': 0, 'combine_nsigma': '4 3', 'combine_type': 'minmed', 'median': True, 'median_newmasks': True},
'STEP 5: BLOT BACK THE MEDIAN IMAGE': {'blot': True, 'blot_interp': 'poly5', 'blot_sinscl': 1.0},
'STEP 6: REMOVE COSMIC RAYS WITH DERIV, DRIZ_CR': {'driz_cr': True, 'driz_cr_corr': False, 'driz_cr_ctegrow': 0, 'driz_cr_grow': 1, 'driz_cr_scale': '1.2 0.7', 'driz_cr_snr': '3.5 3.0'},
'STEP 7: DRIZZLE FINAL COMBINED IMAGE': {'driz_combine': True, 'final_bits': 0, 'final_fillval': 'INDEF', 'final_kernel': 'square', 'final_outnx': None, 'final_outny': None, 'final_pixfrac': 1.0, 'final_rot': 0.0, 'final_scale': None, 'final_units': 'cps', 'final_wht_type': 'EXP'},
'_RULES_': {'_rule1_': ''},
'_task_name_': 'rt_sample',
'build': False,
'clean': False,
'coeffs': 'header',
'context': True,
'dec': 32.0,
'group': '',
'input': '',
'mdriztab': True,
'mode': 'all',
'output': 'final_drz.fits',
'ra': 8.0,
'refimage': '',
'runfile': 'my_m-drizzle.run',
'shiftfile': '',
'staticfile': '',
'updatewcs': True,
'workinplace': False}

THE CONFIG-SPEC:
{'STEP 1: STATIC MASK': {'static': "boolean_kw(default=True, triggers='_section_switch_', comment='Create static bad-pixel mask from the data?')", 'static_sig': "float_kw(default=4.0, pos=6, comment='Skip pos-5; Sigma*rms below mode to clip for static mask')"},
'STEP 2: SKY SUBTRACTION': {'skyclip': "integer_kw(default=5, comment='Number of clipping iterations')", 'skylower': "float_or_none_kw(default=None, comment='Lower limit of usable data for sky (always in electrons)')", 'skylsigma': "float_kw(default=4., comment='Lower side clipping factor (in sigma)')", 'skystat': 'string_kw(default="median", comment=\'Sky correction statistics parameter\')', 'skysub': "boolean_kw(default=True, triggers='_section_switch_', pos=7, comment='Perform sky subtraction?')", 'skyupper': "float_or_none_kw(default=None, comment='Upper limit of usable data for sky (always in electrons)')", 'skyuser': 'string_kw(default="", comment=\'KEYWORD indicating a sky subtraction value if done by user.\')', 'skyusigma': "float_kw(default=4., comment='Upper side clipping factor (in sigma)')", 'skywidth': "float_or_none_kw(default=None, comment='Bin width for sampling sky statistics (in sigma)')"},
'STEP 3: DRIZZLE SEPARATE IMAGES': {'_section_': 'string_kw(default=\'\', active_if=\'_rule1_\', comment= "en/dis-able whole section")',
'driz_sep_bits': "integer_kw(default=0, comment='Integer mask bit values considered good')",
'driz_sep_fillval': "string_kw(default=None, comment='Value to be assigned to undefined output points')",
'driz_sep_kernel': 'option_kw("turbo","square","point", "gaussian", "tophat", "lanczos3", default="turbo", comment=\'Shape of kernel function\')',
'driz_sep_outnx': 'float_or_none_kw(default=None, comment="Size of separate output frame\'s X-axis (pixels)")',
'driz_sep_outny': 'float_or_none_kw(default=None, comment="Size of separate output frame\'s Y-axis (pixels)")',
'driz_sep_pixfrac': "float_kw(default=1., comment='Linear size of drop in input pixels')",
'driz_sep_rot': 'float_or_none_kw(default=None, comment="Position Angle of drizzled image\'s Y-axis w.r.t. North (degrees)")',
'driz_sep_scale': "float_or_none_kw(default=None, comment='Absolute size of output pixels in arcsec/pixel')",
'driz_sep_wt_scl': 'string_kw(default="exptime", comment=\'Weighting factor for input data image\')',
'driz_separate': "boolean_kw(default=True, triggers='_section_switch_', comment='Drizzle onto separate output images?')"},
'STEP 4: CREATE MEDIAN IMAGE': {'combine_grow': "integer_kw(default=1, comment='Radius (pixels) for neighbor rejection')",
'combine_hthresh': 'string_kw(default="INDEF", comment=\'Upper threshold for clipping input pixel values\')',
'combine_lthresh': 'string_kw(default="INDEF", comment=\'Lower threshold for clipping input pixel values\')',
'combine_maskpt': "float_kw(default=0.7, comment='Percentage of weight image value below which it is flagged as a bad pixel.')",
'combine_nhigh': "integer_kw(default=0, comment='minmax: Number of high pixels to reject')",
'combine_nlow': "integer_kw(default=0, comment='minmax: Number of low pixels to reject')",
'combine_nsigma': 'string_kw(default="4 3", comment=\'Significance for accepting minimum instead of median\')',
'combine_type': 'option_kw("minmed","median","sum",default="minmed", comment=\'Type of combine operation\')',
'median': "boolean_kw(default=True, triggers='_section_switch_', is_set_by='_rule1_', comment='Create a median image?')",
'median_newmasks': "boolean_kw(default=true, comment='Create new masks when doing the median?')"},
'STEP 5: BLOT BACK THE MEDIAN IMAGE': {'blot': "boolean_kw(default=true, triggers='_section_switch_', comment='Blot the median back to the input frame?')", 'blot_interp': 'option_kw("poly5","nearest","linear", "poly3", "sinc",default="poly5", comment=\'Interpolant (nearest,linear,poly3,poly5,sinc)\')', 'blot_sinscl': "float_kw(default=1.0, comment='Scale for sinc interpolation kernel')"},
'STEP 6: REMOVE COSMIC RAYS WITH DERIV, DRIZ_CR': {'driz_cr': "boolean_kw(default=True, triggers='_section_switch_', comment='Perform CR rejection with deriv and driz_cr?')", 'driz_cr_corr': "boolean_kw(default=False, comment='Create CR cleaned _cor file and a _crmask file?')", 'driz_cr_ctegrow': "integer_kw(default=0, comment='Driz_cr_ctegrow parameter')", 'driz_cr_grow': "integer_kw(default=1, comment='Driz_cr_grow parameter')", 'driz_cr_scale': 'string_kw(default="1.2 0.7", comment=\'Driz_cr.scale parameter\')', 'driz_cr_snr': 'string_kw(default="3.5 3.0", comment=\'Driz_cr.SNR parameter\')'},
'STEP 7: DRIZZLE FINAL COMBINED IMAGE': {'driz_combine': "boolean_kw(default=True, triggers='_section_switch_', comment='Perform final drizzle image combination?')",
'final_bits': "integer_kw(default=0, comment='Integer mask bit values considered good')",
'final_fillval': 'string_kw(default="INDEF", comment=\'Value to be assigned to undefined output points\')',
'final_kernel': 'option_kw("square","point","gaussian","turbo","tophat","lanczos3",default="square", comment=\'Shape of kernel function\')',
'final_outnx': "float_or_none_kw(default=None, comment='Size of FINAL output frame X-axis (pixels)')",
'final_outny': "float_or_none_kw(default=None, comment='Size of FINAL output frame Y-axis (pixels)')",
'final_pixfrac': "float_kw(default=1., comment='Linear size of drop in input pixels')",
'final_rot': 'float_kw(default=0., comment="Position Angle of drizzled image\'s Y-axis w.r.t. North (degrees)")',
'final_scale': "float_or_none_kw(default=None, comment='')",
'final_units': 'option_kw("counts", "cps", default="cps", comment=\'Units for final drizzle image (counts or cps)\')',
'final_wht_type': 'option_kw("EXP","ERR","IVM",default="EXP", comment=\'Type of weighting for final drizzle\')'},
'_RULES_': {'_rule1_': "string_kw(default='', code='from pytools.parseinput import parseinput; OUT = len(parseinput(VAL)[0]) > 1')"},
'_task_name_': "string_kw(default='rt_sample')",
'build': "boolean_kw(default=no, comment='Create multi-extension output file?')",
'clean': "boolean_kw(default=no, active_if='_rule1_', comment='Remove temporary files?')",
'coeffs': 'string_kw(default="header", comment=\'Use header-based distortion coefficients?\')',
'context': "boolean_kw(default=yes, comment='Create context image during final drizzle?')",
'dec': "float_or_none_kw(default=None, pos=3, comment='declination output frame center in decimal degrees')",
'group': 'string_kw(default="", inactive_if=\'_rule1_\', comment=\'Single extension or group to be combined/cleaned\')',
'input': 'string_kw(default="", triggers=\'_rule1_\', comment=\'Input files (name, suffix, or @list)\', pos=0)',
'mdriztab': "boolean_kw(default=True, comment='Use Multidrizzle parameter file specified in header?')",
'mode': 'string_kw(default="all", comment=\'\')',
'output': "string_kw(default='final_drz.fits', comment='Rootname for output drizzled products', pos=1)",
'ra': "float_or_none_kw(default=None, active_if='_R2_', pos=2, comment='right ascension output frame center in decimal degrees')",
'refimage': 'string_kw(default="", comment=\'Reference image from which to obtain a WCS\')',
'runfile': 'string_kw(default="multidrizzle.run", comment=\'File for logging the script commands\', pos=4)',
'shiftfile': 'string_kw(default="", comment=\'Shiftfile name\')',
'staticfile': "string_kw(default='', comment='Name of (optional) input static bad-pixel mask')",
'updatewcs': "boolean_kw(default=yes, comment='Update the WCS keywords?')",
'workinplace': "boolean_kw(default=no, comment='Work on input files in place? (NOT RECOMMENDED)')"}

sigStrToKwArgsDict:
SIGN: string_kw(default='rt_sample')
DICT: {'default': 'rt_sample'}
SIGN: boolean_kw(default=no, comment='Create multi-extension output file?')
DICT: {'comment': 'Create multi-extension output file?', 'default': 'no'}
SIGN: boolean_kw(default=no, active_if='_rule1_', comment='Remove temporary files?')
DICT: {'active_if': '_rule1_', 'comment': 'Remove temporary files?', 'default': 'no'}
SIGN: string_kw(default="header", comment='Use header-based distortion coefficients?')
DICT: {'comment': 'Use header-based distortion coefficients?', 'default': 'header'}
SIGN: boolean_kw(default=yes, comment='Create context image during final drizzle?')
DICT: {'comment': 'Create context image during final drizzle?', 'default': 'yes'}
SIGN: float_or_none_kw(default=None, pos=3, comment='declination output frame center in decimal degrees')
DICT: {'comment': 'declination output frame center in decimal degrees', 'default': 'None', 'pos': '3'}
SIGN: string_kw(default="", inactive_if='_rule1_', comment='Single extension or group to be combined/cleaned')
DICT: {'comment': 'Single extension or group to be combined/cleaned', 'default': '', 'inactive_if': '_rule1_'}
SIGN: string_kw(default="", triggers='_rule1_', comment='Input files (name, suffix, or @list)', pos=0)
DICT: {'comment': 'Input files (name, suffix, or @list)', 'default': '', 'pos': '0', 'triggers': '_rule1_'}
SIGN: boolean_kw(default=True, comment='Use Multidrizzle parameter file specified in header?')
DICT: {'comment': 'Use Multidrizzle parameter file specified in header?', 'default': 'True'}
SIGN: string_kw(default="all", comment='')
DICT: {'comment': '', 'default': 'all'}
SIGN: string_kw(default='final_drz.fits', comment='Rootname for output drizzled products', pos=1)
DICT: {'comment': 'Rootname for output drizzled products', 'default': 'final_drz.fits', 'pos': '1'}
SIGN: float_or_none_kw(default=None, active_if='_R2_', pos=2, comment='right ascension output frame center in decimal degrees')
DICT: {'active_if': '_R2_', 'comment': 'right ascension output frame center in decimal degrees', 'default': 'None', 'pos': '2'}
SIGN: string_kw(default="", comment='Reference image from which to obtain a WCS')
DICT: {'comment': 'Reference image from which to obtain a WCS', 'default': ''}
SIGN: string_kw(default="multidrizzle.run", comment='File for logging the script commands', pos=4)
DICT: {'comment': 'File for logging the script commands', 'default': 'multidrizzle.run', 'pos': '4'}
SIGN: string_kw(default="", comment='Shiftfile name')
DICT: {'comment': 'Shiftfile name', 'default': ''}
SIGN: string_kw(default='', comment='Name of (optional) input static bad-pixel mask')
DICT: {'comment': 'Name of (optional) input static bad-pixel mask', 'default': ''}
SIGN: boolean_kw(default=yes, comment='Update the WCS keywords?')
DICT: {'comment': 'Update the WCS keywords?', 'default': 'yes'}
SIGN: boolean_kw(default=no, comment='Work on input files in place? (NOT RECOMMENDED)')
DICT: {'comment': 'Work on input files in place? (NOT RECOMMENDED)', 'default': 'no'}

THE POS ARGS:
['', 'final_drz.fits', 8.0, 32.0, 'my_m-drizzle.run', 4.0, False]

THE KWD ARGS:
{'STEP 1: STATIC MASK': {'static': True},
'STEP 2: SKY SUBTRACTION': {'skyclip': 5, 'skylower': None, 'skylsigma': 4.0, 'skystat': 'median', 'skyupper': None, 'skyuser': '', 'skyusigma': 4.0, 'skywidth': None},
'STEP 3: DRIZZLE SEPARATE IMAGES': {'_section_': '', 'driz_sep_bits': 0, 'driz_sep_fillval': '', 'driz_sep_kernel': 'turbo', 'driz_sep_outnx': None, 'driz_sep_outny': None, 'driz_sep_pixfrac': 1.0, 'driz_sep_rot': None, 'driz_sep_scale': None, 'driz_sep_wt_scl': 'exptime', 'driz_separate': False},
'STEP 4: CREATE MEDIAN IMAGE': {'combine_grow': 1, 'combine_hthresh': 'INDEF', 'combine_lthresh': 'INDEF', 'combine_maskpt': 0.5, 'combine_nhigh': 0, 'combine_nlow': 0, 'combine_nsigma': '4 3', 'combine_type': 'minmed', 'median': True, 'median_newmasks': True},
'STEP 5: BLOT BACK THE MEDIAN IMAGE': {'blot': True, 'blot_interp': 'poly5', 'blot_sinscl': 1.0},
'STEP 6: REMOVE COSMIC RAYS WITH DERIV, DRIZ_CR': {'driz_cr': True, 'driz_cr_corr': False, 'driz_cr_ctegrow': 0, 'driz_cr_grow': 1, 'driz_cr_scale': '1.2 0.7', 'driz_cr_snr': '3.5 3.0'},
'STEP 7: DRIZZLE FINAL COMBINED IMAGE': {'driz_combine': True, 'final_bits': 0, 'final_fillval': 'INDEF', 'final_kernel': 'square', 'final_outnx': None, 'final_outny': None, 'final_pixfrac': 1.0, 'final_rot': 0.0, 'final_scale': None, 'final_units': 'cps', 'final_wht_type': 'EXP'},
'build': False,
'clean': False,
'coeffs': 'header',
'context': True,
'group': '',
'mdriztab': True,
'mode': 'all',
'refimage': '',
'shiftfile': '',
'staticfile': '',
'updatewcs': True,
'workinplace': False}
