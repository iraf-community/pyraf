_task_name_ = rt_sample
input = ""# Input files (name, suffix, or @list)
output = final_drz.fits# Rootname for output drizzled products
mdriztab = True# Use Multidrizzle parameter file specified in header?
refimage = ""# Reference image from which to obtain a WCS
runfile = my_m-drizzle.run# File for logging the script commands
workinplace = False# Work on input files in place? (NOT RECOMMENDED)
updatewcs = True# Update the WCS keywords?
coeffs = header# Use header-based distortion coefficients?
context = True# Create context image during final drizzle?
clean = False# Remove temporary files?
group = ""# Single extension or group to be combined/cleaned
ra = 8.0# right ascension output frame center in decimal degrees
dec = 32.0# declination output frame center in decimal degrees
shiftfile = ""# Shiftfile name
staticfile = ""# Name of (optional) input static bad-pixel mask
build = False# Create multi-extension output file?
mode = all# 

[STEP 1: STATIC MASK]
static = True# Create static bad-pixel mask from the data?
static_sig = 4.0

[STEP 2: SKY SUBTRACTION]
skysub = False# Perform sky subtraction?
skywidth = None# Bin width for sampling sky statistics (in sigma)
skystat = median# Sky correction statistics parameter
skylower = None# Lower limit of usable data for sky (always in electrons)
skyupper = None# Upper limit of usable data for sky (always in electrons)
skyclip = 5# Number of clipping iterations
skylsigma = 4.0# Lower side clipping factor (in sigma)
skyusigma = 4.0# Upper side clipping factor (in sigma)
skyuser = ""# KEYWORD indicating a sky subtraction value if done by user.

[STEP 3: DRIZZLE SEPARATE IMAGES]
driz_separate = False# Drizzle onto separate output images?
driz_sep_outnx = None# Size of separate output frame's X-axis (pixels)
driz_sep_outny = None# Size of separate output frame's Y-axis (pixels)
driz_sep_kernel = turbo# Shape of kernel function
driz_sep_wt_scl = exptime# Weighting factor for input data image
driz_sep_scale = None# Absolute size of output pixels in arcsec/pixel
driz_sep_pixfrac = 1.0# Linear size of drop in input pixels
driz_sep_rot = None# Position Angle of drizzled image's Y-axis w.r.t. North (degrees)
driz_sep_fillval = ""# Value to be assigned to undefined output points
driz_sep_bits = 0# Integer mask bit values considered good

[STEP 4: CREATE MEDIAN IMAGE]
median = True# Create a median image?
median_newmasks = True# Create new masks when doing the median?
combine_maskpt = 0.5# Percentage of weight image value below which it is flagged as a bad pixel.
combine_type = minmed# Type of combine operation
combine_nsigma = 4 3# Significance for accepting minimum instead of median
combine_nlow = 0# minmax: Number of low pixels to reject
combine_nhigh = 0# minmax: Number of high pixels to reject
combine_lthresh = INDEF# Lower threshold for clipping input pixel values
combine_hthresh = INDEF# Upper threshold for clipping input pixel values
combine_grow = 1# Radius (pixels) for neighbor rejection

[STEP 5: BLOT BACK THE MEDIAN IMAGE]
blot = True# Blot the median back to the input frame?
blot_interp = poly5# Interpolant (nearest,linear,poly3,poly5,sinc)
blot_sinscl = 1.0# Scale for sinc interpolation kernel

["STEP 6: REMOVE COSMIC RAYS WITH DERIV, DRIZ_CR"]
driz_cr = True# Perform CR rejection with deriv and driz_cr?
driz_cr_corr = False# Create CR cleaned _cor file and a _crmask file?
driz_cr_snr = 3.5 3.0# Driz_cr.SNR parameter
driz_cr_grow = 1# Driz_cr_grow parameter
driz_cr_ctegrow = 0# Driz_cr_ctegrow parameter
driz_cr_scale = 1.2 0.7# Driz_cr.scale parameter

[STEP 7: DRIZZLE FINAL COMBINED IMAGE]
driz_combine = True# Perform final drizzle image combination?
final_wht_type = EXP# Type of weighting for final drizzle
final_outnx = None# Size of FINAL output frame X-axis (pixels)
final_outny = None# Size of FINAL output frame Y-axis (pixels)
final_kernel = square# Shape of kernel function
final_pixfrac = 1.0# Linear size of drop in input pixels
final_rot = 0.0# Position Angle of drizzled image's Y-axis w.r.t. North (degrees)
final_fillval = INDEF# Value to be assigned to undefined output points
final_bits = 0# Integer mask bit values considered good
final_units = cps# Units for final drizzle image (counts or cps)
final_scale = None# 
[_RULES_]
